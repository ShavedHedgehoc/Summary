version: '3'

services:
  front:
    container_name: front
    build: 
      context:  .
      dockerfile: docker/frontend/Dockerfile
    depends_on:
      - api
    ports:
      - "3000:3000"
    # environment:
    #   CHOKIDAR_USEPOLLING: "true"
    # volumes:
    #   - front:/app
    # networks:
      # - summary
  #     links:
  #       - "web"
    command: npm start server
    # restart: always
  api:
    container_name: api
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    env_file:
      - .env    
    ports:
      - 5000:5000    
    depends_on:
      - postgres
    networks:
      - postgres
    command: npm run start:dev
    restart: always
  postgres:
    container_name: postgres_container    
    image: postgres        
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - postgres
    env_file:
      - .env    
    restart: unless-stopped  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4    
    volumes:
       - pgadmin:/var/lib/pgadmin
    env_file:
      - .env
    ports:
       - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

networks:
  postgres:
    driver: bridge

volumes:
  pgdata:
  pgadmin:

    # postgres:
    # pgdata:
    # pgadmin:
    # front: